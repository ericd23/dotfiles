set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set period 1
set hidden off
set info ctime

set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

cmd open ${{
  test -L $f && f=$(readlink -f $f)
  case $(file --mime-type $f -b) in
    text/*|application/json|inode/x-empty) $EDITOR $fx;;
  #  audio/*) mpv --audio-display=no $f ;;
  #  video/*) setsid -f mpv $f -quiet >/dev/null 2>&1 ;;
  #  application/pdf|application/vnd*|application/epub*) setsid -f zathura $fx >/dev/null 2>&1 ;;
    *) handlr open $fx
  esac
}}

cmd extract ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "extract?[y/N]"
	read ans
	[ $ans = "y" ] && aunpack $fx
}}

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}

cmd transfer ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	qrcp send $fx
}}

cmd tar ${{
  set -f
  mkdir $1
  cp -r $fx $1
  tar czf $1.tar.gz $1
  rm -rf $1
}}

cmd zip ${{
  set -f
  mkdir $1
  cp -r $fx $1
  zip -r $1.zip $1
  rm -rf $1
}}

cmd annotate ${{
  set -f
  xournalpp $fx >/dev/null 2>&1 & disown
}}

cmd helixedit ${{
  set -f
  helix $fx
}}

cmd ecnwedit ${{
  set -f
  emacsclient -nw $fx
}}

cmd ecedit ${{
  set -f
  ec $fx
}}

map C extract
map D delete
map T transfer
map A annotate
map <enter> shell
map x $$f
map X !$f
map H helixedit
map e ecnwedit
map E ecedit
